-- Script de diagnostic pour v√©rifier la compatibilit√© du syst√®me IBAN
-- √Ä ex√©cuter dans Supabase SQL Editor

-- 1. V√©rifier toutes les tables existantes
DO $$
BEGIN
    RAISE NOTICE '=== DIAGNOSTIC DE LA BASE DE DONN√âES ===';
    RAISE NOTICE '';
    RAISE NOTICE 'üìã Tables existantes:';
END
$$;

SELECT 
    table_name,
    CASE 
        WHEN table_name LIKE '%submission%' THEN 'üé¨ Soumissions'
        WHEN table_name LIKE '%campaign%' THEN 'üì¢ Campagnes'
        WHEN table_name LIKE '%profile%' THEN 'üë§ Profils'
        WHEN table_name LIKE '%payment%' THEN 'üí∞ Paiements'
        WHEN table_name LIKE '%wallet%' THEN 'üí≥ Wallets'
        ELSE 'üìÅ Autre'
    END as category
FROM information_schema.tables 
WHERE table_schema = 'public' 
AND table_type = 'BASE TABLE'
ORDER BY category, table_name;

-- 2. V√©rifier la structure de clip_submissions
DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üé¨ Structure de clip_submissions:';
END
$$;

SELECT 
    column_name,
    data_type,
    is_nullable,
    column_default,
    CASE 
        WHEN column_name LIKE '%payment%' THEN 'üí∞'
        WHEN column_name LIKE '%status%' THEN 'üìä'
        WHEN column_name LIKE '%amount%' THEN 'üíµ'
        WHEN column_name LIKE '%stripe%' THEN 'üî∑'
        ELSE 'üìù'
    END as icon
FROM information_schema.columns 
WHERE table_name = 'clip_submissions' 
ORDER BY ordinal_position;

-- 3. V√©rifier la structure de profiles pour les champs IBAN
DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üë§ Champs IBAN dans profiles:';
END
$$;

SELECT 
    column_name,
    data_type,
    is_nullable,
    CASE 
        WHEN column_name = 'iban' THEN 'üè¶ IBAN'
        WHEN column_name = 'bank_name' THEN 'üèõÔ∏è Banque'
        WHEN column_name = 'account_holder_name' THEN 'üë§ Titulaire'
        ELSE 'üìù Autre'
    END as description
FROM information_schema.columns 
WHERE table_name = 'profiles' 
AND column_name IN ('iban', 'bank_name', 'account_holder_name')
ORDER BY column_name;

-- 4. V√©rifier si pending_payments existe
DO $$
DECLARE
    table_exists boolean;
BEGIN
    SELECT EXISTS (
        SELECT 1 FROM information_schema.tables 
        WHERE table_name = 'pending_payments'
    ) INTO table_exists;
    
    IF table_exists THEN
        RAISE NOTICE '';
        RAISE NOTICE '‚úÖ Table pending_payments existe';
    ELSE
        RAISE NOTICE '';
        RAISE NOTICE '‚ùå Table pending_payments n''existe pas - √† cr√©er';
    END IF;
END
$$;

-- 5. V√©rifier les campagnes/missions existantes
DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üì¢ Tables de campagnes/missions:';
END
$$;

SELECT 
    table_name,
    (SELECT COUNT(*) FROM information_schema.columns WHERE table_name = t.table_name) as column_count
FROM information_schema.tables t
WHERE table_schema = 'public' 
AND (table_name LIKE '%campaign%' OR table_name LIKE '%mission%')
ORDER BY table_name;

-- 6. Diagnostic des relations manquantes
DO $$
DECLARE
    has_campaigns boolean;
    has_missions boolean;
    submission_table text;
BEGIN
    -- V√©rifier quelle table de campagne existe
    SELECT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'campaigns') INTO has_campaigns;
    SELECT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'missions') INTO has_missions;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üîó Analyse des relations:';
    
    IF has_campaigns THEN
        RAISE NOTICE '‚úÖ Table campaigns trouv√©e';
        submission_table := 'campaign_submissions';
    ELSIF has_missions THEN
        RAISE NOTICE '‚úÖ Table missions trouv√©e';
        submission_table := 'clip_submissions';
    ELSE
        RAISE NOTICE '‚ùå Aucune table de campagne/mission trouv√©e';
    END IF;
    
    -- V√©rifier si on a les bonnes colonnes dans clip_submissions
    IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'clip_submissions' AND column_name = 'mission_id') THEN
        RAISE NOTICE '‚úÖ clip_submissions.mission_id existe';
    END IF;
    
    IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'clip_submissions' AND column_name = 'campaign_id') THEN
        RAISE NOTICE '‚úÖ clip_submissions.campaign_id existe';
    END IF;
END
$$;

-- 7. Script de correction automatique
DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üîß RECOMMANDATIONS DE CORRECTION:';
    RAISE NOTICE '';
    
    -- V√©rifier si on doit ajouter les champs IBAN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'iban') THEN
        RAISE NOTICE 'üìù Ex√©cuter: ALTER TABLE profiles ADD COLUMN iban VARCHAR(34);';
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'bank_name') THEN
        RAISE NOTICE 'üìù Ex√©cuter: ALTER TABLE profiles ADD COLUMN bank_name VARCHAR(255);';
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'account_holder_name') THEN
        RAISE NOTICE 'üìù Ex√©cuter: ALTER TABLE profiles ADD COLUMN account_holder_name VARCHAR(255);';
    END IF;
    
    -- V√©rifier si on doit cr√©er pending_payments
    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'pending_payments') THEN
        RAISE NOTICE 'üìù Ex√©cuter le script: migrate_to_iban_system_fixed.sql';
    END IF;
    
    RAISE NOTICE '';
    RAISE NOTICE '‚úÖ Diagnostic termin√© !';
END
$$; 